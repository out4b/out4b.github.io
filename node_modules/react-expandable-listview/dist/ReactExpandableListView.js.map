{"version":3,"sources":["../src/ReactExpandableListView.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEqB,a;;;AAOnB,yBAAa,KAAb,EAAoB;AAAA;;AAAA,iGACZ,KADY;;AAAA,QAEV,IAFU,GAED,MAAK,KAFJ,CAEV,IAFU;;AAGlB,UAAK,KAAL,GAAa;AACX;AADW,KAAb;AAHkB;AAMnB;;;;6BAES;AAAA;;AAAA,mBACgC,KAAK,KADrC;AAAA,UACA,aADA,UACA,aADA;AAAA,UACe,YADf,UACe,YADf;AAAA,UAEA,IAFA,GAES,KAAK,KAFd,CAEA,IAFA;;AAGR,UAAI,QAAQ,CAAZ;AACA,UAAI,gBAAgB,SAAhB,aAAgB,GAAM;AACxB,+BAAqB,KAArB;AACD,OAFD;;AAIA,UAAI,cAAc,SAAd,WAAc,GAAM;AACtB,6BAAmB,KAAnB;AACD,OAFD;;AAIA,aACE;AAAA;QAAA,EAAK,KAAI,UAAT,EAAoB,WAAU,8BAA9B;QACE;AAAA;UAAA,EAAI,WAAU,wBAAd;UAEE,OAAO,IAAP,CAAY,IAAZ,EAAkB,GAAlB,CAAsB,UAAC,CAAD,EAAI,KAAJ,EAAc;AAClC,gBAAM,SAAS,KAAK,CAAL,EAAQ,aAAR,CAAf;AACA,gBAAM,QAAQ,KAAK,CAAL,EAAQ,YAAR,CAAd;AAFkC,gBAG1B,QAH0B,GAGb,KAAK,CAAL,CAHa,CAG1B,QAH0B;AAAA,gBAI1B,MAJ0B,GAIf,KAAK,CAAL,CAJe,CAI1B,MAJ0B;;AAKlC;AACA,gBAAM,YAAY,eAAlB;AACA,gBAAM,UAAU,aAAhB;;AAEA,mBACE;AAAA;cAAA;AACE,qBAAK,KADP;AAEE,8BAAc,EAAC,GAAG,CAAJ,EAFhB;AAGE,uBAAO,EAAC,GAAG,yBAAO,WAAW,MAAX,GAAoB,CAA3B,CAAJ,EAHT;cAKE;AAAA,oBAAE,CAAF,QAAE,CAAF;AAAA,uBACE;AAAA;kBAAA,EAAK,KAAK,CAAV;kBACE;AAAA;oBAAA;oBACE;AACE,2BAAK,SADP;AAEE,8BAAQ,MAFV;AAGE,mCAAa,KAHf;AAIE,iCAAU,gCAJZ;AAKE,oCAAc,OAAK,YAAL,CAAkB,IAAlB,SAA6B,KAA7B;AALhB,sBADF;oBAQE;AAAA;sBAAA;AACE,+BAAO;AACL,mCAAS,OADJ;AAEL,oCAAU,QAFL;AAGL,uCAAW;AAHN,yBADT;sBAME;AACE,6BAAK,OADP;AAEE,+BAAO,KAFT;AAGE,mCAAU;AAHZ;AANF;AARF;AADF,iBADF;AAAA;AALF,aADF;AAkCD,WA3CD;AAFF;AADF,OADF;AAoDD;;;iCAEa,W,EAAa;AACzB,UAAI,UAAU,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAK,KAAL,CAAW,IAA7B,CAAd;AACA,cAAQ,WAAR,EAAqB,QAArB,GAAgC,CAAC,QAAQ,WAAR,EAAqB,QAAtD;AACA,WAAK,QAAL,CACE,OADF;AAGD;;;;;;AAvFkB,a,CACZ,S,GAAY;AACjB,QAAM,iBAAU,KAAV,CAAgB,UADL;AAEjB,iBAAe,iBAAU,MAAV,CAAiB,UAFf;AAGjB,gBAAc,iBAAU,MAAV,CAAiB;AAHd,C;kBADA,a","file":"ReactExpandableListView.js","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport ListHeader from './lib/ListHeader'\nimport ListItemsManager from './lib/ListItemsManager'\nimport { Motion, spring } from 'react-motion'\n\nexport default class ReactListView extends Component {\n  static propTypes = {\n    data: PropTypes.array.isRequired,\n    headerAttName: PropTypes.string.isRequired,\n    itemsAttName: PropTypes.string.isRequired\n  }\n\n  constructor (props) {\n    super(props)\n    const { data } = this.props\n    this.state = {\n      data\n    }\n  }\n\n  render () {\n    const { headerAttName, itemsAttName } = this.props\n    const { data } = this.state\n    let _refi = 0\n    let makeHeaderRef = () => {\n      return `ListHeader-${_refi}`\n    }\n\n    let makeItemRef = () => {\n      return `ListItem-${_refi}`\n    }\n\n    return (\n      <div ref=\"listview\" className=\"expandable-listview_outerDiv\">\n        <ul className=\"expandable-listview_ul\">\n        {\n          Object.keys(data).map((k, index) => {\n            const header = data[k][headerAttName]\n            const items = data[k][itemsAttName]\n            const { isOpened } = data[k]\n            const { height } = data[k]\n            _refi++\n            const headerRef = makeHeaderRef()\n            const itemRef = makeItemRef()\n\n            return (\n              <Motion\n                key={index}\n                defaultStyle={{h: 0}}\n                style={{h: spring(isOpened ? height : 0)}}>\n                {\n                ({h}) => (\n                  <div key={k}>\n                    <li>\n                      <ListHeader\n                        ref={headerRef}\n                        header={header}\n                        headerIndex={index}\n                        className=\"expandable-listview_listHeader\"\n                        handleToggle={this.handleToggle.bind(this, index)}\n                      />\n                      <div\n                        style={{\n                          display: 'block',\n                          overflow: 'hidden',\n                          height: `${h}`\n                        }}>\n                        <ListItemsManager\n                          ref={itemRef}\n                          items={items}\n                          className=\"expandable-listview_listItems\"\n                        />\n                      </div>\n                    </li>\n                  </div>\n                )\n              }\n              </Motion>\n          )\n          })\n        }\n        </ul>\n      </div>\n    )\n  }\n\n  handleToggle (headerIndex) {\n    let newData = Object.assign({}, this.state.data)\n    newData[headerIndex].isOpened = !newData[headerIndex].isOpened\n    this.setState(\n      newData\n    )\n  }\n}\n"]}